---
import Layout from '../layouts/Layout.astro';
import BusinessList from '../components/BusinessList.astro';
import type { Category } from '../types';

export async function getStaticPaths() {
  const categoryResponse = await fetch('http://localhost:4321/categories.json');
  const categoryData = await categoryResponse.json();
  const categories = categoryData.categories;

  function flattenCategories(categories: Category[], parentPath: string[] = []): { params: { category: string }, props: { category: Category, path: string[] } }[] {
    return categories.flatMap(category => {
      const currentPath = [...parentPath, category.id];
      const result = [];
      if (category.subcategories) {
        result.push(...category.subcategories.map(subcat => ({
          params: { category: [...currentPath, subcat.id].join('/') },
          props: { category: subcat, path: [...currentPath, subcat.id] }
        })));
        result.push(...flattenCategories(category.subcategories, currentPath));
      }
      return result;
    });
  }

  return flattenCategories(categories);
}

const { category, path } = Astro.props;

async function getCategoryName(id: string): Promise<string> {
  const categoryResponse = await fetch('http://localhost:4321/categories.json');
  const categoryData = await categoryResponse.json();
  const categories = categoryData.categories;

  const findCategory = (categories: Category[], id: string): Category | undefined => {
    for (const cat of categories) {
      if (cat.id === id) return cat;
      if (cat.subcategories) {
        const found = findCategory(cat.subcategories, id);
        if (found) return found;
      }
    }
  };

  const foundCategory = findCategory(categories, id);
  return foundCategory ? foundCategory.name : id;
}

const breadcrumb = await Promise.all(path.map(getCategoryName));
---

<Layout title={category.name}>
  <div class="breadcrumb">
    <a href="/">Home</a>
    {breadcrumb.map((name, index) => (
      <span>
        &gt; {index === breadcrumb.length - 1 
          ? <span>{name}</span>
          : <a href={`/${path.slice(0, index + 1).join('/')}`}>{name}</a>
        }
      </span>
    ))}
  </div>
  <h2>{category.name} Businesses</h2>
  <BusinessList category={category.id} />
</Layout>

<style>
  h2 {
    color: var(--primary-color);
    margin-bottom: 1rem;
  }

  .breadcrumb {
    margin-bottom: 1rem;
    font-size: 0.9rem;
  }

  .breadcrumb a {
    color: var(--secondary-color);
    text-decoration: none;
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .breadcrumb span {
    color: var(--text-color);
  }
</style>