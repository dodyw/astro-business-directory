---
export interface Props {
  category?: string;
}

const { category } = Astro.props;

// Fetch the business data
const response = await fetch('http://localhost:4321/businesses.json');
const data = await response.json();
let businesses = data.businesses;

// Filter businesses by category if provided
if (category) {
  const categoryParts = category.split('/');
  businesses = businesses.filter(business => 
    categoryParts.every((part, index) => business.category[index] === part)
  );
}

function renderCategoryBreadcrumbs(categoryPath: string[]) {
  return categoryPath.map((cat, index) => {
    const path = categoryPath.slice(0, index + 1).join('/');
    return `<a href="/${path}">${cat}</a>`;
  }).join(' > ');
}

function getBusinessUrl(business) {
  return `/${business.category.join('/')}/${business.slug}`;
}
---

<div class="business-list">
  <h2>Business Directory</h2>
  {businesses.length > 0 ? (
    businesses.map((business) => (
      <div class="business-card">
        <h3><a href={getBusinessUrl(business)}>{business.name}</a></h3>
        <p><strong>Category:</strong> <Fragment set:html={renderCategoryBreadcrumbs(business.category)} /></p>
        <p>{business.description}</p>
        <p><strong>Address:</strong> {business.address}</p>
        <p><strong>Phone:</strong> {business.phone}</p>
        <p><strong>Website:</strong> <a href={business.website} target="_blank" rel="noopener noreferrer">{business.website}</a></p>
      </div>
    ))
  ) : (
    <p>No businesses found in this category.</p>
  )}
</div>

<style>
  .business-list {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
  }

  .business-card {
    background-color: #f9f9f9;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
  }

  h2 {
    color: #333;
    text-align: center;
  }

  h3 {
    color: #0066cc;
    margin-bottom: 10px;
  }

  h3 a {
    color: #0066cc;
    text-decoration: none;
  }

  h3 a:hover {
    text-decoration: underline;
  }

  p {
    margin: 5px 0;
  }

  a {
    color: #0066cc;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }
</style>